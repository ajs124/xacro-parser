{"version":3,"file":"XacroLoader.js","sources":["../src/XacroLoader.js"],"sourcesContent":["// TODO: Verify against ros-ran xacro files\n// TODO: Report errors / warnings back to the client\n\nconst PARENT_SCOPE = Symbol('parent');\n\nfunction getUrlBase(url) {\n\n    const tokens = url.split(/[\\\\/]/g);\n    tokens.pop();\n    if (tokens.length === 0) return './';\n    return tokens.join('/') + '/';\n\n}\n\nexport default\nclass XacroLoader {\n\n    constructor(manager = null) {\n\n        this.manager = manager;\n\n    }\n\n    /* Public API */\n    load(url, onComplete, options) {\n\n        // Check if a full URI is specified before\n        // prepending the package info\n        const manager = this.manager;\n        const xacroPath = this.manager.resolveURL(url);\n        const workingPath = getUrlBase(url);\n\n        options = Object.assign({ workingPath }, options);\n\n        if (manager) {\n            manager.itemStart(xacroPath);\n        }\n\n        fetch(xacroPath, options.fetchOptions)\n            .then(res => res.text())\n            .then(data => {\n\n                this.parse(data, onComplete, options);\n                if (manager) {\n                    manager.itemEnd(xacroPath);\n                }\n\n            })\n            .catch(e => {\n\n                // TODO: Add onProgress and onError functions here\n                console.error('XacroLoader: Error parsing file.', e);\n                if (manager) {\n                    manager.itemError(xacroPath);\n                    manager.itemEnd(xacroPath);\n                }\n\n            });\n\n    }\n\n    parse(data, onLoad, options = {}) {\n\n        /* Utilities */\n        function mergeObjects(...args) {\n            const res = {};\n            for (let i = 0, l = args.length; i < l; i++) {\n                const obj = args[i];\n                for (const key in obj) {\n                    res[key] = obj[key];\n                }\n                if (PARENT_SCOPE in obj) {\n                    res[PARENT_SCOPE] = obj[PARENT_SCOPE];\n                }\n            }\n            return res;\n        }\n\n        function createNewScope(properties) {\n            const res = mergeObjects(properties);\n            res[PARENT_SCOPE] = properties;\n            return res;\n        }\n\n        // Deep clone an xml node without the macro or property tags.\n        function deepClone(node, stripPropsMacros) {\n            const res = node.cloneNode();\n            const childNodes = node.childNodes;\n            for (let i = 0, l = childNodes.length; i < l; i++) {\n                const c = childNodes[i];\n                const tagName = c.tagName;\n                if (!stripPropsMacros || (tagName !== 'xacro:property' && tagName !== 'xacro:macro')) {\n                    res.appendChild(deepClone(c, stripPropsMacros));\n                }\n            }\n            return res;\n        }\n\n        // QuerySelectorAll that respects tag prefixes like 'xacro:'\n        function getElementsWithName(node, name, res = []) {\n            if (node.tagName === name) {\n                res.push(node);\n            }\n            for (let i = 0, l = node.children.length; i < l; i++) {\n                const child = node.children[i];\n                getElementsWithName(child, name, res);\n            }\n            return res;\n        }\n\n        /* Evaluation */\n        // Evaluate expressions and rospack commands in attribute text\n        // TODO: expressions can basically be any python expression\n        // TODO: support proper expression evaluation without Function or eval\n        function evaluateAttribute(str, properties) {\n\n            // recursively unpack parameters\n            function unpackParams(str, properties) {\n                if (typeof str === 'number') return str;\n\n                const res = str.replace(/(\\$?\\$\\([^)]+\\))|(\\$?\\${[^}]+})/g, match => {\n\n                    if (/^\\$\\$/.test(match)) return match.substring(1);\n\n                    const isRospackCommand = /^\\$\\(/.test(match);\n                    const contents = match.substring(2, match.length - 1);\n                    if (isRospackCommand) {\n\n                        const command = unpackParams(contents, properties);\n                        const tokens = command.split(/\\s+/g);\n                        const stem = tokens.shift();\n\n                        if (stem in rospackCommands) {\n                            return rospackCommands[stem](...tokens);\n                        } else {\n                            throw new Error(`XacroLoader: Cannot run rospack command \"${ contents }\"`);\n                        }\n\n                    } else {\n                        if (stack.includes(contents)) {\n                            throw new Error(\n                                `XacroLoader: Cannot evaluate infinitely recursive expression: ${\n                                    stack.join(' > ')\n                                } > ${\n                                    contents\n                                }`\n                            );\n                        }\n\n                        stack.push(contents);\n\n                        const operators = /[()/*+\\-%|&=]+/g;\n                        const expr = contents\n                            .replace(operators, m => ` ${ m } `)\n                            .trim()\n                            .split(/\\s+/g)\n                            .map(t => {\n                                operators.lastIndex = 0;\n                                if (operators.test(t)) return t;\n                                if (!isNaN(parseFloat(t))) return t;\n                                if (/^'.*?'$/.test(t)) return t;\n                                if (/^\".*?\"$/.test(t)) return t;\n\n                                if (t in properties) {\n                                    const arg = unpackParams(properties[t], properties);\n                                    if (isNaN(parseFloat(arg)) || /[^0-9.eE]/.test(arg)) {\n                                        return `\"${ arg.toString().replace(/\"/g, '\\\\\"') }\"`;\n                                    } else {\n                                        return arg;\n                                    }\n                                } else {\n                                    throw new Error(\n                                        `XacroLoader: Missing parameter \"${ t }\".`\n                                    );\n                                }\n                            })\n                            .join('');\n\n                        stack.pop();\n                        if (isNaN(parseFloat(expr)) || /[^0-9.eE]/.test(expr)) {\n                            return (new Function(`return ${ expr };`))();\n                        } else {\n                            return expr;\n                        }\n                    }\n\n                });\n\n                return res;\n\n            }\n\n            const stack = [];\n            const allProps = mergeObjects(globalProperties, properties);\n            try {\n                return unpackParams(str, allProps);\n            } catch (e) {\n                console.warn(`XacroLoader: Failed to process expression \"${ str }\".`);\n                console.warn(e.message);\n                return str;\n            }\n\n        }\n\n        // Evaluate the given node as a macro\n        async function evaluateMacro(node, properties, macros) {\n\n            // Find the macro\n            const macroName = node.tagName.replace(/^xacro:/, '');\n            const macro = macros[macroName];\n\n            if (!macro) {\n                console.warn(`XacroLoader: Cannot find macro \"${ macroName }\"`);\n            }\n\n            // Copy the properties and macros so we can modify them with\n            // macro input fields and local macro definitions.\n            const ogProperties = properties;\n            const ogMacros = macros;\n            properties = createNewScope(properties);\n            macros = mergeObjects(macros);\n\n            // Modify the properties with macro param inputs\n            let children = [];\n            for (const c of node.children) {\n                children.push(await processNode(c, ogProperties, ogMacros));\n            }\n            children = children.flat().filter(c => !!c).filter(c => c.nodeType === c.ELEMENT_NODE);\n\n            let blockCount = 0;\n            for (const p in macro.params) {\n                const param = macro.params[p];\n                if (node.hasAttribute(p)) {\n                    properties[p] = evaluateAttribute(node.getAttribute(p), ogProperties);\n                } else if (param.type === 'BLOCK') {\n                    properties[p] = [children[blockCount]];\n                    blockCount++;\n                } else if (param.type === 'MULTI_BLOCK') {\n                    properties[p] = [...children.filter(c => c.tagName === p)[0].childNodes];\n                } else {\n                    properties[p] = evaluateAttribute(macro.params[p].def, ogProperties);\n                }\n            }\n\n            // Expand the macro\n            const res = [];\n            const macroChildren = [...macro.node.childNodes];\n            for (const c of macroChildren) {\n                const nodes = await processNode(c, properties, macros);\n                if (Array.isArray(nodes)) {\n                    res.push(...nodes);\n                } else {\n                    res.push(nodes);\n                }\n            }\n\n            return res;\n        }\n\n        /* Parsing */\n        // Conver the params into an object representation\n        function parseMacroParam(param) {\n            const obj = {};\n\n            // Save the type of parameter\n            // - two asterisks means an element expands input multiple\n            // - one asterisk means copy the first elemnt\n            // - no asterisks means value param\n            if (/^\\*\\*/.test(param)) {\n                obj.type = 'MULTI_BLOCK';\n            } else if (/^\\*/.test(param)) {\n                obj.type = 'BLOCK';\n            } else {\n                obj.type = 'PARAM';\n            }\n\n            // strip the asterisks\n            param = param.replace(/^\\*{1,2}/g, '');\n\n            // Check if a default value is provided\n            if (/:=/.test(param)) {\n                const [name, def] = param.split(':=');\n\n                // TODO: Support caret and default syntax\n                // TODO: is there any difference between the := and = syntax?\n                if (/^\\^/.test(def) || /\\|/.test(def)) {\n                    console.warn(`XacroLoader: ROS Jade pass-through notation not supported in macro defaults: ${ def }`);\n                }\n\n                obj.name = name;\n                obj.def = def;\n            } else {\n                obj.name = param;\n                obj.def = null;\n            }\n\n            return obj;\n        }\n\n        // Parse a xacro:macro tag\n        function parseMacro(node) {\n            // get attributes\n            const name = node.getAttribute('name').replace(/^xacro:/, '');\n            const params = node.getAttribute('params');\n\n            // parse params\n            const inputMap = {};\n            if (params) {\n                const inputs = params\n                    .trim()\n                    .split(/\\s+/g)\n                    .map(s => parseMacroParam(s));\n                inputs.forEach(inp => {\n                    inputMap[inp.name] = inp;\n                });\n            }\n\n            return {\n                name,\n                node: deepClone(node, false),\n                params: inputMap,\n            };\n        }\n\n        // Recursively process and expand a node\n        async function processNode(node, properties, macros) {\n            if (node.nodeType !== node.ELEMENT_NODE) {\n                const res = node.cloneNode();\n                res.textContent = evaluateAttribute(res.textContent, properties);\n                return res;\n            }\n\n            let tagName = node.tagName.toLowerCase();\n            if (!requirePrefix) {\n                switch (tagName) {\n\n                    case 'property':\n                    case 'macro':\n                    case 'insert_block':\n                    case 'if':\n                    case 'unless':\n                    case 'include':\n                    case 'element':\n                    case 'attribute':\n                        tagName = `xacro:${ tagName }`;\n                        break;\n                    default:\n                        if (tagName in macros) {\n                            tagName = `xacro:${ tagName }`;\n                        }\n                        break;\n\n                }\n            }\n\n            switch (tagName) {\n\n                case 'xacro:property': {\n                    const name = node.getAttribute('name');\n\n                    // TODO: The xacro tests work if the attribute is evaluated immediately but\n                    // some of examples seem to expect that every property retains its scope\n                    // and evaluate at the last possible moment.\n                    let value;\n                    if (node.hasAttribute('value')) {\n                        // value = evaluateAttribute(node.getAttribute('value'), properties);\n                        value = node.getAttribute('value');\n                    } else if (node.hasAttribute('default')) {\n                        // value = evaluateAttribute(node.getAttribute('default'), properties);\n                        value = node.getAttribute('default');\n                    } else {\n                        const childNodes = [...node.childNodes];\n                        value = [];\n                        for (const c of childNodes) {\n                            value.push(deepClone(c, false));\n                        }\n                    }\n\n                    if (localProperties) {\n                        const scope = node.getAttribute('scope') || 'local';\n                        if (scope === 'global') {\n                            globalProperties[name] = value;\n                        } else if (scope === 'parent') {\n                            properties[PARENT_SCOPE][name] = value;\n                            properties[name] = value;\n                        } else {\n                            properties[name] = value;\n                        }\n                    } else {\n                        globalProperties[name] = value;\n                    }\n\n                    break;\n                }\n                case 'xacro:macro': {\n                    const macro = parseMacro(node);\n                    macros[macro.name] = macro;\n                    break;\n                }\n                case 'xacro:insert_block': {\n                    const name = node.getAttribute('name');\n                    const nodes = properties[name];\n                    const res = [];\n\n                    for (const c of nodes) {\n                        res.push(await processNode(c, properties, macros));\n                    }\n                    return res;\n                }\n                case 'xacro:if':\n                case 'xacro:unless': {\n                    const value = evaluateAttribute(node.getAttribute('value'), properties);\n                    let bool = null;\n                    if (!isNaN(parseFloat(value))) {\n                        bool = !!parseFloat(value);\n                    } else if (value === 'true' || value === 'false') {\n                        bool = value === 'true';\n                    } else {\n                        bool = value;\n                    }\n\n                    if (tagName === 'xacro:unless') {\n                        bool = !bool;\n                    }\n\n                    if (bool) {\n                        const childNodes = [...node.childNodes];\n                        const res = [];\n                        for (const c of childNodes) {\n                            res.push(await processNode(c, properties, macros));\n                        }\n                        return res;\n                    } else {\n                        return null;\n                    }\n                }\n                case 'xacro:include': {\n                    if (node.hasAttribute('ns')) {\n                        console.warn('XacroLoader: xacro:include name spaces not supported.');\n                    }\n                    const filename = evaluateAttribute(node.getAttribute('filename'), properties);\n                    const filePath = /^[/\\\\]/.test(filename[0]) ? filename : currWorkingPath + filename;\n\n                    const prevWorkingPath = currWorkingPath;\n                    currWorkingPath = getUrlBase(filePath);\n\n                    const includeContent = await loadInclude(filePath);\n                    const childNodes = [...includeContent.children[0].childNodes];\n                    const res = [];\n                    for (const c of childNodes) {\n                        res.push(await processNode(c, properties, macros));\n                    }\n\n                    currWorkingPath = prevWorkingPath;\n                    return res.flat();\n                }\n                case 'xacro:attribute':\n                case 'xacro:element':\n                    console.warn(`XacroLoader: ${ tagName } tags not supported.`);\n                    return null;\n                default: {\n                    // TODO: check if there's a 'call' attribute here which indicates that\n                    // a macro should be invoked?\n                    if (/^xacro:/.test(tagName) || tagName in macros) {\n                        return evaluateMacro(node, properties, macros);\n                    } else {\n\n                        const res = node.cloneNode();\n                        for (let i = 0, l = res.attributes.length; i < l; i++) {\n                            const attr = res.attributes[i];\n                            const value = evaluateAttribute(attr.value, properties);\n                            res.setAttribute(attr.name, value);\n                        }\n\n                        const childNodes = [...node.childNodes];\n                        for (let i = 0, l = childNodes.length; i < l; i++) {\n                            const child = await processNode(childNodes[i], properties, macros);\n                            if (child) {\n                                if (Array.isArray(child)) {\n                                    child.filter(c => !!c).forEach(c => res.appendChild(c));\n                                } else {\n                                    res.appendChild(child);\n                                }\n                            }\n                        }\n                        return res;\n                    }\n                }\n\n            }\n\n            return null;\n        }\n\n        // Process all property and macro tags into the objects\n        async function gatherPropertiesAndMacros(el, properties, macros) {\n            const propertyEl = getElementsWithName(el, 'xacro:property');\n            if (!requirePrefix) {\n                propertyEl.push(...getElementsWithName(el, 'property'));\n            }\n            for (const el of propertyEl) {\n                await processNode(el, properties, macros);\n            }\n\n            const macroEl = getElementsWithName(el, 'xacro:macro');\n            if (!requirePrefix) {\n                macroEl.push(...getElementsWithName(el, 'macro'));\n            }\n            for (const el of macroEl) {\n                await processNode(el, properties, macros);\n            }\n        }\n\n        // Process a document node with a new property and macro scope\n        async function processXacro(xacro, properties, macros) {\n            if (localProperties) {\n                properties = mergeObjects(properties);\n                macros = mergeObjects(macros);\n            }\n\n            const res = xacro.cloneNode();\n            for (let i = 0, l = xacro.children.length; i < l; i++) {\n                const child = await processNode(xacro.children[i], properties, macros);\n                child.removeAttribute('xmlns:xacro');\n                if (child) {\n                    res.appendChild(child);\n                }\n            }\n            return res;\n        }\n\n        async function loadInclude(path) {\n\n            try {\n                const res = await fetch(path, options.fetchOptions);\n                const text = await res.text();\n                return new DOMParser().parseFromString(text, 'text/xml');\n            } catch (e) {\n                console.error('XacroLoader: Could not loader included file: ', path);\n                console.error(e);\n            }\n\n        }\n\n        async function loadIncludes(xacro, workingPath, results = []) {\n\n            const includeEl = getElementsWithName(xacro, 'xacro:include');\n            if (!requirePrefix) {\n                includeEl.push(...getElementsWithName(xacro, 'include'));\n            }\n\n            const promises = includeEl.map(el => {\n                // TODO: Handle namespaces on the include.\n                if (el.hasAttribute('ns')) {\n                    console.warn('XacroLoader: xacro:include name spaces not supported.');\n                }\n\n                const filename = el.getAttribute('filename');\n                const namespace = el.getAttribute('ns') || null;\n                const filePath = /[/\\\\]/.test(filename[0]) ? filename : workingPath + filename;\n                const pr = loadInclude(filePath)\n                    .then(content => {\n                        results.push({ filename, namespace, content });\n\n                        const relPath = getUrlBase(filePath);\n                        return loadIncludes(content, relPath, results);\n                    });\n                return pr;\n            });\n\n            await Promise.all(promises);\n            return results;\n        }\n\n        // TODO: Provide a default \"arg\" command function that defaults to\n        // xacro:arg fields.\n        options = Object.assign({\n            inOrder: true,\n            requirePrefix: true,\n            localProperties: true,\n            rospackCommands: {},\n            workingPath: '',\n        }, options);\n\n        let localProperties = options.localProperties;\n        const inOrder = options.inOrder;\n        const workingPath = options.workingPath;\n        let currWorkingPath = workingPath;\n        const requirePrefix = options.requirePrefix;\n        const rospackCommands = options.rospackCommands;\n        const globalProperties = { True: 1, False: 0 };\n        globalProperties[PARENT_SCOPE] = globalProperties;\n        const globalMacros = {};\n        const includeMap = {};\n        let content = new DOMParser().parseFromString(data, 'text/xml');\n\n        if (localProperties && !inOrder) {\n            console.warn('XacroLoader: Implicitly setting \"localProperties\" option to false because \"inOrder\" is false.');\n            localProperties = false;\n        }\n\n        let inOrderPromise = null;\n        if (!inOrder) {\n            inOrderPromise = (async function() {\n                await gatherPropertiesAndMacros(content, globalProperties, globalMacros);\n                content = deepClone(content, true);\n\n                return loadIncludes(content, workingPath)\n                    .then(arr => {\n                        arr.forEach(inc => {\n                            // TODO: handle namespaces here when rolling up properties and macros\n                            gatherPropertiesAndMacros(inc.content, globalProperties, globalMacros);\n                            inc.content = deepClone(inc.content, true);\n                            includeMap[inc.filename] = inc.content;\n                        });\n                    });\n            })();\n        } else {\n            inOrderPromise = Promise.resolve();\n        }\n\n        (async function() {\n            await inOrderPromise;\n            const xml = await processXacro(content, globalProperties, globalMacros);\n            onLoad(xml);\n        })();\n    }\n\n}\n"],"names":[],"mappings":"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"}